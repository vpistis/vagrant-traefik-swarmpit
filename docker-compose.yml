version: '3.8'
services:
##################### WEB Server (Private behind Traefik) #####################
  web:
    image: nginxdemos/hello
    networks:
      - public
      - internal
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        delay: 5s
        order: start-first
        parallelism: 2
      rollback_config:
        parallelism: 0
        order: stop-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.http.services.https.loadbalancer.server.port=80
        - traefik.http.routers.http.entrypoints=http
        - traefik.http.routers.http.rule=Host(`172.168.10.2`)
##################### TRAEFIK (Public) #####################
  reverse-proxy:
    image: traefik:v2.3.2
#    depends_on:
    command:
      - --log.level=INFO
      - --accesslog=true
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.watch=true
      - --providers.docker.exposedbydefault=true
      - --providers.docker.swarmMode=true
      - --providers.docker.swarmModeRefreshSeconds=5
      - --providers.docker.network=public
      - --providers.file.directory=/configs/
      - --providers.file.watch=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entryPoints.metrics.address=:8082
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.manualrouting=true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 8082:8082
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik_configs/:/configs:ro
      - ./certs:/certs:ro
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.http.services.prometheus.loadbalancer.server.port=8082
        - traefik.http.routers.prometheus.rule=PathPrefix(`/metrics`)
        - traefik.http.routers.prometheus.service=prometheus@internal
        - traefik.http.routers.prometheus.entrypoints=metrics
        - traefik.http.routers.prometheus.middlewares=my-basic-auth
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        delay: 10s
        order: start-first
        parallelism: 1
      rollback_config:
        parallelism: 0
        order: stop-first
      placement:
        constraints:
          - node.role == manager
    networks:
      - public

networks:
  public:
    external: true
  internal:
    external: false
